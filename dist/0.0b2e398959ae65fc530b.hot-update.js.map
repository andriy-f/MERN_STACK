{"version":3,"sources":["webpack:///./server/renderedPageRouter.jsx"],"names":["renderedPageRouter","get","req","res","routes","location","url","error","redirectLocation","renderProps","console","log","status","send","message","redirect","pathname","search","componentsWithData","components","filter","c","dataFetcher","dataFetchers","map","params","urlBase","Promise","all","then","dataList","initialState","forEach","namedData","Object","assign","html","catch","err"],"mappings":";;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AAEA;;;;AAGA;;;;AACA;;;;AACA;;;;;;AAEA,MAAMA,qBAAqB,uBAA3B;;AALA;;;AAQAA,mBAAmBC,GAAnB,CAAuB,GAAvB,EAA4B,CAACC,GAAD,EAAMC,GAAN,KAAa;AACvC,0BAAM,EAACC,wBAAD,EAASC,UAAUH,IAAII,GAAvB,EAAN,EAAmC,CAACC,KAAD,EAAQC,gBAAR,EAA0BC,WAA1B,KAAyC;AAC1E,QAAGF,KAAH,EAAS;AACPG,cAAQC,GAAR,CAAY,4BAAZ,EAA0CJ,KAA1C;AACAJ,UAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,MAAMO,OAA3B;AACD,KAHD,MAGO,IAAGN,gBAAH,EAAoB;AACzBE,cAAQC,GAAR,CAAY,wCAAZ,EAAsDH,gBAAtD;AACAL,UAAIY,QAAJ,CAAa,GAAb,EAAkBP,iBAAiBQ,QAAjB,GAA4BR,iBAAiBS,MAA/D;AAED,KAJM,MAIA,IAAGR,WAAH,EAAe;AACpB,YAAMS,qBAAqBT,YAAYU,UAAZ,CAAuBC,MAAvB,CAA8BC,KAAIA,EAAEC,WAApC,CAA3B;AACA,YAAMC,eAAeL,mBAAmBM,GAAnB,CAAuBH,KAAIA,EAAEC,WAAF,CAAc;AAC5DG,gBAAQhB,YAAYgB,MADwC;AAE5DpB,kBAAUI,YAAYJ,QAFsC;AAG5DqB,iBAAU;AAHkD,OAAd,CAA3B,CAArB;AAKAC,cAAQC,GAAR,CAAYN,WAAZ,EAAyBO,IAAzB,CAA+BC,QAAD,IAAY;AACxC,YAAIC,eAAc,EAAlB;AACAD,iBAASE,OAAT,CAAkBC,SAAD,IAAa;AAC5BF,yBAAeG,OAAOC,MAAP,CAAcJ,YAAd,EAA4BE,SAA5B,CAAf;AACD,SAFD;;AAKA,cAAMG,OAAO,4BACX;AAAA;AAAA,YAAgB,cAAcL,YAA9B;AACE,oEAAmBtB,WAAnB;AADF,SADW,CAAb;AAKAN,YAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,wBAASuB,IAAT,EAAeL,YAAf,CAArB;AACD,OAbD,EAaGM,KAbH,CAaSC,OAAK;AACZ5B,gBAAQC,GAAR,CAAa,+BAA8B2B,GAAI,EAA/C;AACD,OAfD;AAgBD,KAvBM,MAuBD;AACJnC,UAAIS,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,WAArB;AACD;AACF,GAlCD;AAmCA;AACA;AACA;AACD,CAvCD;kBAwCeb,kB","file":"0.0b2e398959ae65fc530b.hot-update.js","sourcesContent":["import React from 'react';\nimport {renderToString } from 'react-dom/server.js';\nimport {match, RouterContext } from 'react-router';\n\nimport Router from 'express';\n\n//import HelloWorld from '../static/src/HelloWorld.jsx';\nimport template from './template.js';\nimport routes from '../static/src/Routes.jsx';\nimport ContextWrapper from '../static/src/ContextWrapper.jsx';\n\nconst renderedPageRouter = new Router();\n\n\nrenderedPageRouter.get('*', (req, res) =>{\n  match({routes, location: req.url}, (error, redirectLocation, renderProps) =>{\n    if(error){\n      console.log(\" there is an error here : \", error);\n      res.status(500).send(error.message);\n    } else if(redirectLocation){\n      console.log(\" there is the redirectLocation here : \", redirectLocation);\n      res.redirect(302, redirectLocation.pathname + redirectLocation.search);\n\n    } else if(renderProps){\n      const componentsWithData = renderProps.components.filter(c=> c.dataFetcher);\n      const dataFetchers = componentsWithData.map(c=> c.dataFetcher({\n        params: renderProps.params,\n        location: renderProps.location,\n        urlBase : 'http://localhost:3000'\n      }));\n      Promise.all(dataFetcher).then((dataList)=>{\n        let initialState ={};\n        dataList.forEach((namedData)=>{\n          initialState = Object.assign(initialState, namedData);\n        });\n\n\n        const html = renderToString(\n          <ContextWrapper initialState={initialState} >\n            <RouterContext {...renderProps} />\n          </ContextWrapper>\n        );\n        res.status(200).send(template(html, initialState));\n      }).catch(err=>{\n        console.log(`Error rendering to string : ${err}`);\n      });\n    }else {\n      res.status(404).send('Not Found');\n    }\n  });\n  // const initialState = {addressee: 'Universe'};\n  // const html = renderToString(<HelloWorld {...initialState} />);\n  // res.send(template(html, initialState));\n});\nexport default renderedPageRouter;\n\n\n\n// WEBPACK FOOTER //\n// ./server/renderedPageRouter.jsx"],"sourceRoot":""}