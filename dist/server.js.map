{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","connect","then","connection","listen","console","log","catch","error","process","env","NODE_ENV","webpack","require","webpackDevMiddleware","webpackHotMiddleware","config","entry","push","plugins","HotModuleReplacementPlugin","bundler","noInfo","get","req","res","filter","query","status","collection","find","toArray","issues","metadata","total_count","length","records","message","post","newIssue","body","created","Date","err","validateIssue","insertOne","cleanupIssue","result","_id","insertedId","limit","next"],"mappings":"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","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient } from 'mongodb';\nimport Issue from './issue.js';\nimport 'babel-polyfill';\nimport SourceMapSupport from 'source-map-support';\n\nSourceMapSupport.install();\n\n\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\nlet db;\nMongoClient.connect('mongodb://localhost/issuetracker').then((connection) => {\n  db = connection;\n\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n}).catch((error) => {\n  console.log('ERROR', error);\n});\n\n\nif (process.env.NODE_ENV !== 'production') {\n  const webpack = require('webpack');\n  const webpackDevMiddleware = require('webpack-dev-middleware');\n  const webpackHotMiddleware = require('webpack-hot-middleware');\n\n  const config = require('../webpack.config');\n  config.entry.app.push('webpack-hot-middleware/client',\n    'webpack/hot/only-dev-server');\n  config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n  const bundler = webpack(config);\n  app.use(webpackDevMiddleware(bundler, { noInfo: true }));\n  app.use(webpackHotMiddleware(bundler, { log: console.log }));\n}\n\n\napp.get('/api/issues', (req, res) => {\n  const filter ={};\n  if(req.query.status) filter.status = req.query.status;\n  db.collection('issues').find().toArray().then((issues) => {\n    const metadata = { total_count: issues.length };\n    res.json({ metadata, records: issues });\n    console.log(\"request\");\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: 'Internal Server Error' });\n    });\n});\n\napp.post('/api/issues', (req, res) => {\n  console.log('******** hello ********');\n  const newIssue = req.body;\n  // newIssue.id = issues.length +1;\n  newIssue.created = new Date();\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\n\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    console.log('******** error ********');\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then((result) => {\n    console.log('******** hello1 ********');\n    db.collection('issues').find({ _id: result.insertedId }).limit(1).next()\n      .then((newIssue) => {\n        console.log('******** hello2 ********');\n        res.json(newIssue);\n      })\n      .catch((error) => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server error : ${error}` });\n      });\n  });\n  // issues.push(newIssue);\n\n  // res.json(newIssue);\n});\n\n// app.listen(3000, ()=>{\n//   console.log('App started on port 3000');\n// });\n"]}