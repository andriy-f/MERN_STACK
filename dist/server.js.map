{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","process","env","NODE_ENV","webpack","require","webpackDevMiddleware","webpackHotMiddleware","config","entry","push","plugins","HotModuleReplacementPlugin","bundler","noInfo","log","console","put","req","res","issueId","params","id","error","status","message","issue","body","_id","err","validateIssue","created","collection","updateOne","convertIssue","then","find","limit","next","savedIssue","catch","get","filter","query","effort_lte","effort_gte","effort","$lte","parseInt","$gte","toArray","issues","metadata","total_count","length","records","post","newIssue","Date","insertOne","cleanupIssue","result","insertedId","sendFile","resolve","connect","connection","listen"],"mappings":"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","file":"server.js","sourcesContent":["import SourceMapSupport from 'source-map-support';\nSourceMapSupport.install();\nimport 'babel-polyfill';\n\nimport path from 'path';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Issue from './issue.js';\n\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\n\n// app.use(bodyParser.urlencoded({extended: true}));\n// app.use(bodyParser.json({type: 'application/*+json'}));\n//app.use(require('connect').bodyParser());\n//app.use(app.router);\n\n\n\nlet db;\n\n\nif (process.env.NODE_ENV !== 'production') {\n  const webpack = require('webpack');\n  const webpackDevMiddleware = require('webpack-dev-middleware');\n  const webpackHotMiddleware = require('webpack-hot-middleware');\n\n  const config = require('../webpack.config');\n  config.entry.app.push('webpack-hot-middleware/client',\n    'webpack/hot/only-dev-server');\n  config.plugins.push(new webpack.HotModuleReplacementPlugin());\n\n  const bundler = webpack(config);\n  app.use(webpackDevMiddleware(bundler, { noInfo: true }));\n  app.use(webpackHotMiddleware(bundler, { log: console.log }));\n}\n\napp.put('/api/issues/:id', (req, res)=> {\n\n    let issueId;\n    try{\n      issueId = new ObjectId(req.params.id);\n    }catch(error){\n      res.status(422).json({message: `Invalid issue ID format : ${error}`});\n      return;\n    }\n    const issue = req.body;\n\n    delete issue._id;\n    const err = Issue.validateIssue(issue);\n    if(err){\n      res.status(422).json({message: `Invalid request: ${err}`});\n      return;\n    }\n\nconsole.log(\"the title to update is : \"+issue.created);\n    db.collection('issues').updateOne({_id: issueId},\n    Issue.convertIssue(issue)).then(()=>\n      db.collection('issues').find({_id: issueId}).limit(1)\n    .next()\n  )\n    .then(savedIssue=>{\n      res.json(savedIssue);\n    })\n    .catch(error=>{\n      console.log(error);\n      res.status(500).json({message: `Internal Server error : ${error}`});\n    });\n});\n\napp.get('/api/issues', (req, res) => {\n  const filter ={};\n  if(req.query.status) filter.status = req.query.status;\n  if(req.query.effort_lte || req.query.effort_gte) filter.effort ={};\n  if(req.query.effort_lte) filter.effort.$lte = parseInt(req.query.effort_lte, 10);\n  if(req.query.effort_gte) filter.effort.$gte = parseInt(req.query.effort_gte, 10);\n\n  db.collection('issues').find(filter).toArray().then((issues) => {\n    const metadata = { total_count: issues.length };\n    res.json({ metadata, records: issues });\n    console.log(\"request\");\n  })\n    .catch((error) => {\n      console.log(error);\n      res.status(500).json({ message: 'Internal Server Error' });\n    });\n});\n\napp.get('/api/issues/:id', (req, res) =>{\n  let issueId;\n  try{\n\n    issueId = ObjectId(req.params.id);\n  }catch(error){\n    res.status(422).json({message:`Invalid issue Id format: ${req.params.id} ${error}`});\n    return;\n  }\n\n  db.collection('issues').find({_id: issueId}).limit(1)\n  .next()\n  .then(issue=>{\n    if(!issue) res.status(404).json({message: `No such issue: ${issueId}`});\n    else res.json(issue);\n  })\n  .catch(error=> {\n    console.log(error);\n    res.status(500).json({message: `Internal server error: ${error}`});\n  });\n});\n\napp.post('/api/issues', (req, res) => {\n\n  const newIssue = req.body;\n  // newIssue.id = issues.length +1;\n  newIssue.created = new Date();\n  if (!newIssue.status) {\n    newIssue.status = 'New';\n  }\nconsole.log('******** hello ********');\n  const err = Issue.validateIssue(newIssue);\n  if (err) {\n    console.log('******** error ********');\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('issues').insertOne(Issue.cleanupIssue(newIssue)).then((result) => {\n    console.log('******** hello1 ********');\n    db.collection('issues').find({ _id: result.insertedId }).limit(1).next()\n      .then((newIssue) => {\n        console.log('******** hello2 ********');\n        res.json(newIssue);\n      })\n      .catch((error) => {\n        console.log(error);\n        res.status(500).json({ message: `Internal Server error : ${error}` });\n      });\n  });\n\n  app.get('*', (req, res) => {\n    res.sendFile(path.resolve('static/index.html'));\n  });\n  // issues.push(newIssue);\n\n  // res.json(newIssue);\n});\n\n// app.listen(3000, ()=>{\n//   console.log('App started on port 3000');\n// });\n\nMongoClient.connect('mongodb://localhost/issuetracker').then((connection) => {\n  db = connection;\n\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n}).catch((error) => {\n  console.log('ERROR', error);\n});\n"]}