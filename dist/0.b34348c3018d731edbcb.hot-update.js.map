{"version":3,"sources":["webpack:///./static/src/IssueReport.jsx"],"names":["statuses","StatRow","props","owner","map","status","index","counts","propTypes","string","isRequired","object","IssueReport","Component","dataFetcher","urlBase","location","search","fetch","then","response","ok","json","error","Promise","reject","data","constructor","context","stats","initialState","state","toastVisible","toastMessage","toastType","setFilter","bind","showError","dismissToast","componentDidMound","loadData","componentDidUpdate","prevProps","oldQuery","query","newQuery","effort_gte","effort_lte","router","push","pathname","message","setState","catch","err","render","Object","keys","contextTypes"],"mappings":"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","file":"0.b34348c3018d731edbcb.hot-update.js","sourcesContent":["import React from 'react';\nimport {Panel, Table } from 'react-bootstrap';\nimport PropTypes from 'prop-types';\n\nimport IssueFilter from './IssueFilter.jsx';\nimport Toast from './Toast.jsx';\n\nconst statuses = ['New', 'Open', 'Assigned', 'Fixed', 'Verified', 'Closed'];\n\nconst StatRow = (props) => (\n  <tr>\n    <td>{props.owner}</td>\n    {statuses.map((status, index)=>(<td key={index}>{props.counts[status]}</td>))}\n  </tr>\n);\n\nStatRow.propTypes = {\n  owner: PropTypes.string.isRequired,\n  counts: PropTypes.object.isRequired,\n};\n\n\nexport default class IssueReport extends React.Component{\n  static dataFetcher({urlBase, location}){\n    const search = location.search ? `${location.search}&_summary` : '?_summary';\n    return fetch(`${urlBase || ''}/api/issues/${search}`).then(response=>{\n      if(!response.ok) return  response.json().then(error=>Promise.reject(error));\n      return response.json().then(data=>({IssueReport: data}));\n    });\n  }\n\n  constructor(props, context){\n    super(props, context);\n    const stats = context.initialState.IssueReport ? context.initialState.IssueReport : {};\n    this.state = {\n      stats,\n      toastVisible: false, toastMessage: '', toastType: 'Success',\n    };\n    this.setFilter = this.setFilter.bind(this);\n    this.showError = this.showError.bind(this);\n    this.dismissToast = this.dismissToast.bind(this);\n  }\n\n  componentDidMound(){\n    this.loadData();\n  }\n\n  componentDidUpdate(prevProps){\n    const oldQuery = prevProps.location.query;\n    const newQuery = this.props.location.query;\n\n    if(oldQuery.status === newQuery.status && oldQuery.effort_gte === newQuery.effort_gte && oldQuery.effort_lte == newQuery.effort_lte){\n      return;\n    }\n    this.loadData();\n  }\n\n  setFilter(query){\n    this.props.router.push({pathname: this.props.location.pathname, query});\n  }\n\n  showError(message){\n    this.setState({toastVisible: true, toastMessage: message, toastType: 'danger'});\n  }\n\n  dismissToast(){\n    this.setState({toastVisible: false});\n  }\n\n  loadData(){\n    IssueReport.dataFetcher({location: this.props.location}).then(data=>{\n      this.setState({stats: data.IssueReport});\n    }).catch(err=>{\n      this.showError(`Error in fetching data from server : ${error}`);\n    });\n  }\n\n  render(){\n    return(\n      <div>\n        <Panel collapsible header=\"Filter\">\n          <issueFilter setFilter={this.setFilter} initFilter={this.props.location.query} />\n        </Panel>\n        <Table bordered condensed hover responsive>\n          <thead>\n            <tr>\n              <th></th>\n              {statuses.map((status, index)=> <td key={index}> {status}</td>)}\n            </tr>\n          </thead>\n          <tbody>\n            {Object.keys(this.state.stats).map((owner, index)=>\n            <StatRow key={index} owner={owner} counts={this.state.stats[owner]} />\n          )}\n          </tbody>\n        </Table>\n        <Toast showing={this.state.toastVisible} message={this.state.toastMessage}\n          onDismiss={this.dismissToast} bsStyle={this.state.toastType} />\n      </div>\n    );\n  }\n}\n\nIssueReport.propTypes ={\n  location: PropTypes.object.isRequired,\n  router: PropTypes.object,\n};\n\nIssueReport.contextTypes={\n  initialState: PropTypes.object,\n};\n\n\n\n// WEBPACK FOOTER //\n// ./static/src/IssueReport.jsx"],"sourceRoot":""}